<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cxkの博客</title>
  
  <subtitle>不负当下，不念过往，不惧明天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xkunchen.github.io/"/>
  <updated>2020-03-04T01:47:47.424Z</updated>
  <id>https://xkunchen.github.io/</id>
  
  <author>
    <name>XuKun Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>oracle向mysql改造</title>
    <link href="https://xkunchen.github.io/2020/01/10/hello-world/"/>
    <id>https://xkunchen.github.io/2020/01/10/hello-world/</id>
    <published>2020-01-10T03:44:53.000Z</published>
    <updated>2020-03-04T01:47:47.424Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​        由于工作需要，把oracle数据库改造成mysql数据库，而oracle和mysql在一定程度上有很大的区别，我们的工作是在已有项目改bug，所以特地总结一下这几天项目需要的改动。</p><a id="more"></a><h2 id="1-1-函数式报错"><a href="#1-1-函数式报错" class="headerlink" title="1.1 函数式报错"></a>1.1 函数式报错</h2><h3 id="1-1-1-start-with-connect-by-prior函数错误"><a href="#1-1-1-start-with-connect-by-prior函数错误" class="headerlink" title="1.1.1 start with connect by prior函数错误"></a>1.1.1 start with connect by prior函数错误</h3><h4 id="1-1-1-1-问题描述："><a href="#1-1-1-1-问题描述：" class="headerlink" title="1.1.1.1 问题描述："></a>1.1.1.1 问题描述：</h4><p>​        这个是oracle特有的一个函数，是根据条件递归查询”树”。注意递归查询，常用用法：start with connect by prior parentId=id或start with connect by prior id=parentId，第一种是：查询结果自己所有的后代节点（包括自己）；第二种用法是查询结果自己所有的父类节点（包括自己）。</p><h4 id="1-1-1-2-解决方案："><a href="#1-1-1-2-解决方案：" class="headerlink" title="1.1.1.2 解决方案："></a>1.1.1.2 解决方案：</h4><p>​        Mysql不支持通过start with connect by进行递归查询，所以创建函数进行查找。</p><p>​        首先是第一种：查询结果自己所有的后代节点（包括自己），首先得了解find_in_set这个函数作用，举例：find_in_set（parent_id,”1,2,3”）的意思是parent_id在1,2,3内。创建函数如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create function getTaskObject    --getTaskObject 函数名称</span><br><span class="line">(rootId varchar(100)) --输入值类型</span><br><span class="line">returns varchar(1024)            --返回值类型</span><br><span class="line">as</span><br><span class="line">BEGIN </span><br><span class="line">DECLARE sTemp VARCHAR(100); </span><br><span class="line">DECLARE sTempChd VARCHAR(100);</span><br><span class="line">DECLARE allData VARCHAR(1024);</span><br><span class="line">SET allData='';</span><br><span class="line">SET sTempChd =cast(rootId as CHAR);</span><br><span class="line">SET sTemp='';</span><br><span class="line">WHILE sTempChd IS NOT NULL DO --如果不空</span><br><span class="line">SET sTemp=sTempChd;</span><br><span class="line">SET allData=CONCAT(allData,',',sTempChd);</span><br><span class="line">SELECT PARENT_ID INTO sTempChd FROM usbp_task_object where OBJECT_ID=sTemp;</span><br><span class="line">END WHILE;  --结束循环</span><br><span class="line">RETURN allData;     --返回结果</span><br><span class="line">END</span><br></pre></td></tr></tbody></table></figure><p>​        调用可以向平时调用内置函数一样调用，这个函数的返回值是所有符合条件id拼接起来字符串，所以我们调用也得加find_in_set(id,该函数名(根节点id))</p><h3 id="1-1-2-Sysdate报错"><a href="#1-1-2-Sysdate报错" class="headerlink" title="1.1.2 Sysdate报错"></a>1.1.2 Sysdate报错</h3><h3 id="1-1-3-日期的计算"><a href="#1-1-3-日期的计算" class="headerlink" title="1.1.3  日期的计算"></a>1.1.3  日期的计算</h3><h3 id="1-1-4-Rownum报错"><a href="#1-1-4-Rownum报错" class="headerlink" title="1.1.4 Rownum报错"></a>1.1.4 Rownum报错</h3><h3 id="1-1-5-运算符报错"><a href="#1-1-5-运算符报错" class="headerlink" title="1.1.5 ||运算符报错"></a>1.1.5 ||运算符报错</h3><h2 id="1-2-其他报错"><a href="#1-2-其他报错" class="headerlink" title="1.2 其他报错"></a>1.2 其他报错</h2><h3 id="1-2-1-表别名报错"><a href="#1-2-1-表别名报错" class="headerlink" title="1.2.1 表别名报错"></a>1.2.1 表别名报错</h3><h3 id="1-2-2-Mysql没有序列问题"><a href="#1-2-2-Mysql没有序列问题" class="headerlink" title="1.2.2 Mysql没有序列问题"></a>1.2.2 Mysql没有序列问题</h3><h3 id="1-2-3-存储类型bigInteger装换toBigDecimal"><a href="#1-2-3-存储类型bigInteger装换toBigDecimal" class="headerlink" title="1.2.3 存储类型bigInteger装换toBigDecimal"></a>1.2.3 存储类型bigInteger装换toBigDecimal</h3><h3 id="1-2-4-union报错"><a href="#1-2-4-union报错" class="headerlink" title="1.2.4  union报错"></a>1.2.4  union报错</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        由于工作需要，把oracle数据库改造成mysql数据库，而oracle和mysql在一定程度上有很大的区别，我们的工作是在已有项目改bug，所以特地总结一下这几天项目需要的改动。&lt;/p&gt;
    
    </summary>
    
      <category term="oracle" scheme="https://xkunchen.github.io/categories/oracle/"/>
    
      <category term="mysql" scheme="https://xkunchen.github.io/categories/oracle/mysql/"/>
    
    
      <category term="oracle" scheme="https://xkunchen.github.io/tags/oracle/"/>
    
      <category term="mysql" scheme="https://xkunchen.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>test title</title>
    <link href="https://xkunchen.github.io/2019/10/12/test-title/"/>
    <id>https://xkunchen.github.io/2019/10/12/test-title/</id>
    <published>2019-10-12T03:44:53.000Z</published>
    <updated>2019-10-12T03:48:47.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文档语言"><a href="#文档语言" class="headerlink" title="文档语言"></a>文档语言</h2><ul><li><a href="README-CN.md">中文文档</a></li><li><a href="README.md">English</a></li></ul><h2 id="Contents-目录"><a href="#Contents-目录" class="headerlink" title="Contents 目录"></a>Contents 目录</h2><ul><li><a href="#introduction-介绍">Introduction 介绍</a></li><li><a href="#demo-演示">Demo 演示</a></li><li><a href="#features-特点">Features 特点</a></li><li><a href="#installation-安装">Installation 安装</a></li><li><a href="#configuration-配置">Configuration 配置</a></li><li><a href="#customize-自定义">Customize 自定义</a></li><li><a href="#faq-提问">FAQ 提问</a></li><li><a href="#gallary-图片展示">Gallary 图片展示</a></li><li><a href="#license-开源许可">License 开源许可</a></li></ul><h2 id="Introduction-介绍"><a href="#Introduction-介绍" class="headerlink" title="Introduction 介绍"></a>Introduction 介绍</h2><a id="more"></a><p>优雅、功能全面、阅读友好的hexo主题。</p><h2 id="Demo-演示"><a href="#Demo-演示" class="headerlink" title="Demo 演示"></a>Demo 演示</h2><ul><li><a href="https://siricee.github.io/hexo-theme-Chic" target="_blank" rel="noopener">Demo site</a></li><li><a href="https://siricee.github.io/" target="_blank" rel="noopener">作者的博客</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文档语言&quot;&gt;&lt;a href=&quot;#文档语言&quot; class=&quot;headerlink&quot; title=&quot;文档语言&quot;&gt;&lt;/a&gt;文档语言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;README-CN.md&quot;&gt;中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;README.md&quot;&gt;English&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;Contents-目录&quot;&gt;&lt;a href=&quot;#Contents-目录&quot; class=&quot;headerlink&quot; title=&quot;Contents 目录&quot;&gt;&lt;/a&gt;Contents 目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#introduction-介绍&quot;&gt;Introduction 介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#demo-演示&quot;&gt;Demo 演示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#features-特点&quot;&gt;Features 特点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#installation-安装&quot;&gt;Installation 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#configuration-配置&quot;&gt;Configuration 配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#customize-自定义&quot;&gt;Customize 自定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#faq-提问&quot;&gt;FAQ 提问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#gallary-图片展示&quot;&gt;Gallary 图片展示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#license-开源许可&quot;&gt;License 开源许可&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;Introduction-介绍&quot;&gt;&lt;a href=&quot;#Introduction-介绍&quot; class=&quot;headerlink&quot; title=&quot;Introduction 介绍&quot;&gt;&lt;/a&gt;Introduction 介绍&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
